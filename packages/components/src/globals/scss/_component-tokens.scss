//
// Copyright IBM Corp. 2020
//
// This source code is licensed under the Apache-2.0 license found in the
// LICENSE file in the root directory of this source tree.
//

@import 'vars';
@import 'theme';
@import 'feature-flags';

$enable-css-custom-properties: feature-flag-enabled(
  'enable-css-custom-properties'
);

/// Get a component token value.
/// @access public
/// @param {Map} $tokens - Map of component tokens
/// @param {String} $name - Token name
/// @example get-token-value($component-tokens, 'tag-background-red');
/// @returns {String} Token value
/// @group component-tokens
@function get-token-value($tokens, $name) {
  $options: map-get($tokens, $name);

  @if type-of($options) == 'list' {
    @each $option in $options {
      $theme: map-get($option, 'theme');

      // Takes the list entry in one of the following conditions:
      // a) Theme ref matches to the current theme
      // b) Theme name matches to the current theme
      // c) Current theme does not have a name (implies that it's a default theme),
      //    and the list entry is for the default theme
      @if $theme ==
        $carbon--theme or
        unquote($theme) ==
        map-get($carbon--theme, 'name') or
        (not map-has-key($carbon--theme, 'name') and $theme == 'default')
      {
        $value: map-get($option, 'value');

        @return if(
          $enable-css-custom-properties == true,
          var(--#{$custom-property-prefix}-#{$name}, #{$value}),
          $value
        );
      }
    }

    @error 'Unable to find component token #{$name} in the current theme.';
  }

  @error 'Unable to find component token #{$name}.';
}
